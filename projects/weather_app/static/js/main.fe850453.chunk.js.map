{"version":3,"sources":["App.js","index.js"],"names":["WeatherApp","props","state","loading","scale","location","temp","sky","icon","feels_like","humidity","pressure","sunrise","sunset","error","getPosition","bind","getPositionErrorHandler","fetchWeather","tempScaleChange","navigator","geolocation","this","setError","setState","getCurrentPosition","errorCode","err","pos","lat","Math","round","coords","latitude","lon","longitude","fetch","then","r","json","fetchResultHandler","fetchErrorHandler","result","coord","formatDate","unix","date","Date","h","getHours","m","getMinutes","substr","name","sys","country","main","weather","t","f","s","isNaN","className","BG","Header","ErrorMessage","Display","Footer","React","Component","c","Icon","src","alt","onClick","Section","type","value","toUpperCase","href","target","rel","xmlns","viewBox","style","verticalAlign","width","d","cx","cy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe850453.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass WeatherApp extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      loading: false,\n      scale: 'C',\n      location: '',\n      temp: '',\n      sky: '',\n      icon: '',\n      feels_like: '',\n      humidity: '',\n      pressure: '',\n      sunrise: '',\n      sunset: '',\n      error: 0\n    };\n\n    this.getPosition = this.getPosition.bind(this);\n    this.getPositionErrorHandler = this.getPositionErrorHandler.bind(this);\n    this.fetchWeather = this.fetchWeather.bind(this);\n    this.tempScaleChange = this.tempScaleChange.bind(this);\n  }\n\n  getPosition () {\n    if (!navigator.geolocation) return this.setError(2);\n    this.setState({\n      loading: true,\n      error: 0\n    });\n    navigator.geolocation.getCurrentPosition(\n      this.fetchWeather, \n      this.getPositionErrorHandler);\n  }\n\n  setError (errorCode) {\n    this.setState({\n      loading: false,\n      error: errorCode\n    });\n  }\n  getPositionErrorHandler (err) {\n    this.setError(1);\n  }\n\n  fetchWeather (pos) {\n    this.setState({\n      lat: Math.round(pos.coords.latitude),\n      lon: Math.round(pos.coords.longitude)\n    });\n    fetch('https://fcc-weather-api.glitch.me/api/current?lon='\n          + pos.coords.longitude + '&lat='\n          + pos.coords.latitude)\n    .then(r => r.json())\n    .then(this.fetchResultHandler.bind(this), \n          this.fetchErrorHandler.bind(this));\n  }\n\n  fetchResultHandler (result) {\n    if (Math.round(result.coord.lat) !== this.state.lat \n      || Math.round(result.coord.lon) !== this.state.lon) \n      return this.setError(2);\n\n    this.setState({\n      loading: false,\n      location: (result.name && result.sys.country \n                && result.name + ', ' + result.sys.country) || '',\n      temp: result.main.temp || result.main.temp === 0 \n              ? Math.round(result.main.temp) : '',\n      feels_like: result.main.feels_like \n                  || result.main.feels_like === 0 \n                    ? Math.round(result.main.feels_like) : '',\n      sky: result.weather[0].main || '',\n      icon: result.weather[0].icon || false,\n      humidity: result.main.humidity || result.main.humidity === 0 \n                  ? result.main.humidity + ' %' : '',\n      pressure: result.main.pressure || result.main.pressure === 0 \n                  ? result.main.pressure + ' mbar' : '',\n      sunrise: result.sys.sunrise ? formatDate(result.sys.sunrise) : '',\n      sunset: result.sys.sunset ? formatDate(result.sys.sunset) : '',\n      error: 0\n    });\n\n    function formatDate (unix) {\n      let date = new Date(unix * 1000),\n      h = '0' + date.getHours(),\n      m = '0' + date.getMinutes();\n      return h.substr(-2) + ':' + m.substr(-2);\n    }\n  }\n\n  fetchErrorHandler (err) {\n    this.setError(2);\n  }\n\n  tempScaleChange () {\n    if (this.state.temp === '' || isNaN(this.state.temp)) return;\n    let t,f,s;\n    if (this.state.scale === 'C') {\n      t = Math.round(this.state.temp * 1.8 + 32);\n      f = (this.state.feels_like === '' \n          || isNaN(this.state.feels_like)) \n            ? '' : Math.round(this.state.feels_like * 1.8 + 32);\n      s = 'F';\n    } else {\n      t = Math.round((this.state.temp - 32) / 1.8);\n      f = (this.state.feels_like === '' \n          || isNaN(this.state.feels_like)) \n            ? '' : Math.round((this.state.feels_like - 32) / 1.8);\n      s = 'C';\n    }\n    this.setState({\n      temp: t,\n      feels_like: f,\n      scale: s\n    });\n  }\n  \n  componentDidMount () {\n    this.getPosition();\n  }\n\n  render () {\n    return (\n      <div className='weatherApp'>\n        <BG sky={this.state.sky}/>\n        <Header icon={this.state.icon} loading={this.state.loading}/>\n        {this.state.error \n          ? <ErrorMessage \n              error={this.state.error}\n              loading={this.state.loading}\n              getPosition={this.getPosition}/>\n          : <Display \n            location={this.state.location}\n            temp={this.state.temp}\n            sky={this.state.sky}\n            scale={this.state.scale}\n            tempScaleChange={this.tempScaleChange}\n            feels_like={this.state.feels_like}\n            humidity={this.state.humidity}\n            pressure={this.state.pressure}\n            sunrise={this.state.sunrise}\n            sunset={this.state.sunset}/>}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nfunction BG (props) {\n  const c = ['','','',''];\n  switch (props.sky) {\n    case 'Snow':\n      c[0] = ' bg__layer_ON';\n      break;\n    case 'Rain':\n      c[1] = ' bg__layer_ON';\n      break;\n    case 'Clouds':\n      c[2] = ' bg__layer_ON';\n      break;\n    case 'Clear':\n      c[3] = ' bg__layer_ON';\n      break;\n    default:\n  }\n  return (\n    <div className='bg'>\n      <div className={'bg__layer bg__layer_snow' + c[0]}/>\n      <div className={'bg__layer bg__layer_rain' + c[1]}/>\n      <div className={'bg__layer bg__layer_clouds' + c[2]}/>\n      <div className={'bg__layer bg__layer_clear' + c[3]}/>\n    </div>\n  );\n}\n\nfunction Header (props) {\n  return (\n    <header className='header'>\n      <div className='header__gap'/>\n      <h1 className='header__h1'>Free Weather App</h1>\n      {props.loading \n        ? <p className='header__loading'>Loading...</p>\n        : <Icon icon={props.icon}/>}\n      <div className='header__gap'/>\n    </header>\n  );\n}\n\nfunction Icon (props) {\n  return (\n    <div className='header__icon'>\n      {props.icon && <img src={props.icon} className='header__img' alt='Sky Icon'/>}\n    </div>\n  );\n}\n\nfunction ErrorMessage (props) {\n  const messages = ['Denied access to geolocation. Please allow the page to access your location.','Information is temporarily unavailable. Please '];\n  return (\n    <section className='errorMessage'>\n      <p className='errorMessage__text'>\n      {messages[props.error - 1]}\n      {props.error === 2 && <button \n        className='errorMessage__button'\n        onClick={props.getPosition}>try again.</button>}\n      </p>\n    </section>\n  );\n}\n\nfunction Display (props) {\n  return (\n    <section className='display'>\n      <Section type='location' value={props.location}/>\n      <Section \n        type='temperature' \n        value={props.temp + '\\u00B0'} \n        scale={props.scale} \n        tempScaleChange={props.tempScaleChange}/>\n      <Section type='sky' value={props.sky}/>\n      <Section \n        type='feelsLike' \n        value={props.feels_like + '\\u00B0'} \n        scale={props.scale} \n        tempScaleChange={props.tempScaleChange}/>\n      <Section type='humidity' value={props.humidity}/>\n      <Section type='pressure' value={props.pressure}/>\n      <Section type='sunrise' value={props.sunrise}/>\n      <Section type='sunset' value={props.sunset}/>\n    </section>\n  );\n}\n\nfunction Section (props) {\n  return (\n    <div className={'section ' + props.type}>\n      <div className='section__gap'/>\n      <h2 className='section__header'>\n        {props.type === 'feelsLike' \n          ? 'FEELS LIKE'\n          : props.type.toUpperCase()}</h2>\n      <p className='section__value'>{props.value}</p>\n      {props.tempScaleChange && \n        <button className='section__button'\n          onClick={props.tempScaleChange}>{props.scale}</button>\n        }\n    </div>\n  );\n}\n\nfunction Footer () {\n  return (\n    <footer>\n      <a className=\"footer__link\" href=\"https://www.instagram.com/miroslavpetrov_/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" style={{verticalAlign: \"middle\", width: 16}}>\n          <path d=\"M256 49c67 0 75 1 102 2 24 1 38 5 47 9a78 78 0 0129 18 78 78 0 0118 29c4 9 8 23 9 47 1 27 2 35 2 102l-2 102c-1 24-5 38-9 47a83 83 0 01-47 47c-9 4-23 8-47 9-27 1-35 2-102 2l-102-2c-24-1-38-5-47-9a78 78 0 01-29-18 78 78 0 01-18-29c-4-9-8-23-9-47-1-27-2-35-2-102l2-102c1-24 5-38 9-47a78 78 0 0118-29 78 78 0 0129-18c9-4 23-8 47-9 27-1 35-2 102-2m0-45c-68 0-77 0-104 2-27 1-45 5-61 11a123 123 0 00-45 29 123 123 0 00-29 45c-6 16-10 34-11 61-2 27-2 36-2 104l2 104c1 27 5 45 11 61a123 123 0 0029 45 123 123 0 0045 29c16 6 34 10 61 11a1796 1796 0 00208 0c27-1 45-5 61-11a129 129 0 0074-74c6-16 10-34 11-61 2-27 2-36 2-104l-2-104c-1-27-5-45-11-61a123 123 0 00-29-45 123 123 0 00-45-29c-16-6-34-10-61-11-27-2-36-2-104-2z\"></path>\n          <path d=\"M256 127a129 129 0 10129 129 129 129 0 00-129-129zm0 213a84 84 0 1184-84 84 84 0 01-84 84z\"></path>\n          <circle cx=\"390.5\" cy=\"121.5\" r=\"30.2\"></circle>\n        </svg> Miroslav Petrov</a>\n    </footer>\n  );\n}\n\nfunction App() {\n  return (\n    <WeatherApp/>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}